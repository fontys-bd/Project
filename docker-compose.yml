version: "3"

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    image: web:latest
    restart: always
    ports:
      - 3000:3000
    networks:
      - app_network
    environment:
      - NEXT_PUBLIC_POST_SERVICE_URL=http://post-service:3003/post
      - NEXT_PUBLIC_USER_SERVICE_URL=http://user-service:3002/user
      - NEXT_PUBLIC_COMMENT_SERVICE_URL=http://comment-service:3004/comment

  # upload-service:
  #   container_name: upload-service
  #   build:
  #     context: .
  #     dockerfile: ./apps/upload-service/Dockerfile
  #   image: upload-service:latest
  #   restart: always
  #   ports:
  #     - 3001:3001
  #   networks:
  #     - app_network
  #   env_file:
  #     - .env

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    image: user-service:latest
    restart: always
    ports:
      - 3002:3002
    networks:
      - app_network
    env_file:
      - .env
    depends_on:
      - krakend
  post-service:
    container_name: post-service
    build:
      context: .
      dockerfile: ./apps/post-service/Dockerfile
    image: post-service:latest
    restart: always
    ports:
      - 3003:3003
    networks:
      - app_network
    env_file:
      - .env
    depends_on:
      - krakend
  comment-service:
    container_name: comment-service
    build:
      context: .
      dockerfile: ./apps/comment-service/Dockerfile
    image: comment-service:latest
    restart: always
    ports:
      - 3004:3004
    networks:
      - app_network
    env_file:
      - .env
    depends_on:
      - krakend

  krakend:
    container_name: krakend
    build:
      context: ./krakend
      dockerfile: ./Dockerfile
    image: krakend:latest
    ports:
      - "8080:8080"
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname.
# test
networks:
  app_network:
    external: true
