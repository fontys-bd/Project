generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified Boolean?
  image         String?
  registered_at DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?
  posts         Post[]
  comments      Comment[]
  likes         Like[]
}

enum LikeType {
  LIKE
  DISLIKE
}

model Like {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  likeType   LikeType
  created_at DateTime
  commentID  String?  @db.ObjectId
  postID     String?  @db.ObjectId
  userID     String?  @db.ObjectId
  post       Post?    @relation(fields: [postID], references: [id])
  comment    Comment? @relation(fields: [commentID], references: [id])
  user       User?    @relation(fields: [userID], references: [id])

  @@unique([userID, postID])
  @@unique([userID, commentID])
}

model Comment {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  created_at DateTime
  updated_at DateTime?
  deleted_at DateTime?
  post       Post      @relation(fields: [postID], references: [id])
  postID     String    @db.ObjectId
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?   @db.ObjectId
  likes      Like[]
}

model Post {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  anonymous    Boolean
  title        String
  content      String
  picture      String?
  picture_desc String?
  status       String
  created_at   DateTime
  updated_at   DateTime
  deleted_at   DateTime?
  topic        String?
  author       User      @relation(fields: [userID], references: [id])
  userID       String    @db.ObjectId
  comments     Comment[]
  likes        Like[]
}
